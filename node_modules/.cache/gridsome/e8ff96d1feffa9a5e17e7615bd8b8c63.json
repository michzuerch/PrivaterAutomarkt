{"remainingRequest":"/home/user/Source/PrivaterAutomarkt/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/Source/PrivaterAutomarkt/src/components/Navbar/ThemeSwitcher.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user/Source/PrivaterAutomarkt/src/components/Navbar/ThemeSwitcher.vue","mtime":1610639869136},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nlet themes = ['light', 'dark']\n\nexport default {\n  props: {\n    theme: {\n      type: String,\n    },\n  },\n\n  computed: {\n    nextTheme() {\n      const currentIndex = themes.indexOf(this.theme)\n      const nextIndex = (currentIndex + 1) % themes.length\n      return themes[nextIndex]\n    }\n  },\n  methods: {\n    toggleTheme() {\n      const currentIndex = themes.indexOf(this.theme);\n      const nextIndex = (currentIndex + 1) % themes.length;\n      window.__setPreferredTheme(themes[nextIndex])\n\n      this.$emit('setTheme', themes[nextIndex])\n    }\n  },\n  async mounted() {\n    // set default\n    if (typeof window.__theme !== 'undefined') this.$emit('setTheme', window.__theme)\n  }\n}\n",{"version":3,"sources":["ThemeSwitcher.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ThemeSwitcher.vue","sourceRoot":"src/components/Navbar","sourcesContent":["<template>\n  <a role=\"button\" @click.prevent=\"toggleTheme()\"  \n      :aria-label=\"'Toggle ' + nextTheme\" \n      :title=\"'Toggle ' + nextTheme\"\n      class=\"toggle-theme\"\n    >\n    \n    <font-awesome :icon=\"['fas', 'sun']\" v-if=\"theme === 'dark'\"></font-awesome>\n    <font-awesome :icon=\"['fas', 'moon']\" v-if=\"theme === 'light'\"></font-awesome>\n  </a>\n</template>\n\n<script>\nlet themes = ['light', 'dark']\n\nexport default {\n  props: {\n    theme: {\n      type: String,\n    },\n  },\n\n  computed: {\n    nextTheme() {\n      const currentIndex = themes.indexOf(this.theme)\n      const nextIndex = (currentIndex + 1) % themes.length\n      return themes[nextIndex]\n    }\n  },\n  methods: {\n    toggleTheme() {\n      const currentIndex = themes.indexOf(this.theme);\n      const nextIndex = (currentIndex + 1) % themes.length;\n      window.__setPreferredTheme(themes[nextIndex])\n\n      this.$emit('setTheme', themes[nextIndex])\n    }\n  },\n  async mounted() {\n    // set default\n    if (typeof window.__theme !== 'undefined') this.$emit('setTheme', window.__theme)\n  }\n}\n</script>"]}]}