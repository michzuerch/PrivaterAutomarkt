{"remainingRequest":"/home/user/Source/PrivaterAutomarkt/node_modules/babel-loader/lib/index.js??ref--1-1!/home/user/Source/PrivaterAutomarkt/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/user/Source/PrivaterAutomarkt/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/Source/PrivaterAutomarkt/src/pages/Infinity.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user/Source/PrivaterAutomarkt/src/pages/Infinity.vue","mtime":1610639869136},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport _asyncToGenerator from \"/home/user/Source/PrivaterAutomarkt/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/user/Source/PrivaterAutomarkt/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CardItem from \"~/components/Content/CardItem.vue\";\nimport FeaturedCard from \"~/components/Content/FeaturedCard.vue\";\nimport ContentHeader from \"~/components/Partials/ContentHeader.vue\";\nexport default {\n  metaInfo: {\n    title: \"Hello, world!\"\n  },\n  components: {\n    CardItem: CardItem,\n    FeaturedCard: FeaturedCard,\n    ContentHeader: ContentHeader\n  },\n  data: function data() {\n    return {\n      loadedPosts: [],\n      currentPage: 1\n    };\n  },\n  created: function created() {\n    var _this$loadedPosts;\n\n    (_this$loadedPosts = this.loadedPosts).push.apply(_this$loadedPosts, _toConsumableArray(this.$page.entries.edges));\n  },\n  methods: {\n    infiniteHandler: function infiniteHandler($state) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$fetch, data, _this$loadedPosts2;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(_this.currentPage + 1 > _this.$page.entries.pageInfo.totalPages)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                $state.complete();\n                _context.next = 9;\n                break;\n\n              case 4:\n                _context.next = 6;\n                return _this.$fetch(\"/infinity/\".concat(_this.currentPage + 1));\n\n              case 6:\n                _yield$_this$$fetch = _context.sent;\n                data = _yield$_this$$fetch.data;\n\n                if (data.entries.edges.length) {\n                  _this.currentPage = data.entries.pageInfo.currentPage;\n\n                  (_this$loadedPosts2 = _this.loadedPosts).push.apply(_this$loadedPosts2, _toConsumableArray(data.entries.edges));\n\n                  $state.loaded();\n                } else {\n                  $state.complete();\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};",{"version":3,"sources":["Infinity.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA,OAAA,QAAA,MAAA,mCAAA;AACA,OAAA,YAAA,MAAA,uCAAA;AACA,OAAA,aAAA,MAAA,yCAAA;AAEA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GADA;AAIA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,YAAA,EAAA,YAFA;AAGA,IAAA,aAAA,EAAA;AAHA,GAJA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAAA;AAIA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AAAA;;AACA,8BAAA,WAAA,EAAA,IAAA,6CAAA,KAAA,KAAA,CAAA,OAAA,CAAA,KAAA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,MADA,EACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,KAAA,CAAA,WAAA,GAAA,CAAA,GAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,UADA;AAAA;AAAA;AAAA;;AAEA,gBAAA,MAAA,CAAA,QAAA;AAFA;AAAA;;AAAA;AAAA;AAAA,uBAIA,KAAA,CAAA,MAAA,qBAAA,KAAA,CAAA,WAAA,GAAA,CAAA,EAJA;;AAAA;AAAA;AAIA,gBAAA,IAJA,uBAIA,IAJA;;AAKA,oBAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,MAAA,EAAA;AACA,kBAAA,KAAA,CAAA,WAAA,GAAA,IAAA,CAAA,OAAA,CAAA,QAAA,CAAA,WAAA;;AACA,wCAAA,KAAA,CAAA,WAAA,EAAA,IAAA,8CAAA,IAAA,CAAA,OAAA,CAAA,KAAA;;AACA,kBAAA,MAAA,CAAA,MAAA;AACA,iBAJA,MAIA;AACA,kBAAA,MAAA,CAAA,QAAA;AACA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAdA;AAnBA,CAAA","sourcesContent":["<template>\n  <Layout>\n    <content-header\n      :title=\"$static.metadata.siteName\"\n      :sub=\"$static.metadata.siteDescription\"\n      image=\"phoenix-han-Nqdh0G8rdCc-unsplash.jpg\"\n    ></content-header>\n\n    <div class=\"container mx-auto\">\n      <transition-group name=\"fade\" class=\"flex flex-wrap my-4\" tag=\"div\">\n        <FeaturedCard\n          key=\"featured_post\"\n          v-if=\"$page.featured.totalCount>0\"\n          :records=\"$page.featured.edges\"\n        />\n        <CardItem v-for=\"{ node } of loadedPosts\" :key=\"node.id\" :record=\"node\" />\n      </transition-group>\n      <ClientOnly>\n        <infinite-loading @infinite=\"infiniteHandler\" spinner=\"spiral\">\n          <div slot=\"no-more\"></div>\n          <div slot=\"no-results\"></div>\n        </infinite-loading>\n      </ClientOnly>\n    </div>\n  </Layout>\n</template>\n\n<page-query>\n  query($page: Int) {\n    featured: allBlog(limit: 4, filter: { featured: { eq: true } }, sortBy:\"created\") {\n      totalCount\n      edges {\n        node {\n          id\n          title\n          image(width: 800)\n          path\n          timeToRead\n          humanTime: created(format: \"DD MMM YYYY\")\n          datetime: created\n          category {\n            id\n            title\n            path\n          }\n          author {\n            id\n            name\n            image(width: 64, height: 64, fit: inside)\n            path\n          }\n        }\n      }\n    }\n    entries: allBlog(perPage: 6, page: $page, sortBy:\"created\") @paginate {\n      totalCount\n      pageInfo {\n        totalPages\n        currentPage\n      }\n      edges {\n        node {\n          id\n          title\n          image(width: 800)\n          path\n          timeToRead\n          featured\n          humanTime: created(format: \"DD MMM YYYY\")\n          datetime: created\n          category {\n            id\n            title\n            path\n          }\n          author {\n            id\n            name\n            image(width: 64, height: 64, fit: inside)\n            path\n          }\n        }\n      }\n    }\n  }\n</page-query>\n\n<static-query>\nquery {\n  metadata {\n    siteName\n    siteDescription\n  }\n}\n</static-query>\n\n<script>\nimport CardItem from \"~/components/Content/CardItem.vue\";\nimport FeaturedCard from \"~/components/Content/FeaturedCard.vue\";\nimport ContentHeader from \"~/components/Partials/ContentHeader.vue\";\n\nexport default {\n  metaInfo: {\n    title: \"Hello, world!\"\n  },\n  components: {\n    CardItem,\n    FeaturedCard,\n    ContentHeader\n  },\n\n  data() {\n    return {\n      loadedPosts: [],\n      currentPage: 1\n    };\n  },\n  created() {\n    this.loadedPosts.push(...this.$page.entries.edges);\n  },\n  methods: {\n    async infiniteHandler($state) {\n      if (this.currentPage + 1 > this.$page.entries.pageInfo.totalPages) {\n        $state.complete();\n      } else {\n        const { data } = await this.$fetch(`/infinity/${this.currentPage + 1}`);\n        if (data.entries.edges.length) {\n          this.currentPage = data.entries.pageInfo.currentPage;\n          this.loadedPosts.push(...data.entries.edges);\n          $state.loaded();\n        } else {\n          $state.complete();\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.fade-enter-active,\n.fade-leave-active {\n  transition: ease opacity 0.3s;\n}\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>"],"sourceRoot":"src/pages"}]}