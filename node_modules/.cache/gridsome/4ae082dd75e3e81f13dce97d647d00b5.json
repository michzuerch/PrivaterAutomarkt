{"remainingRequest":"/home/user/Source/PrivaterAutomarkt/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/Source/PrivaterAutomarkt/src/components/Content/Pagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user/Source/PrivaterAutomarkt/src/components/Content/Pagination.vue","mtime":1610639869136},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Source/PrivaterAutomarkt/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    baseUrl: String,\n    currentPage: Number,\n    totalPages: Number,\n    maxVisibleButtons: {\n      type: Number,\n      required: false,\n      default: 3\n    }\n  },\n  methods: {\n    isFirstPage(currentPage, totalPages) {\n        return currentPage == 1;\n    },\n    isLastPage(currentPage, totalPages) {\n        return currentPage == totalPages;\n    },\n    isCurrentPage(currentPage, pageElement) {\n        return currentPage == pageElement;\n    },\n    nextPage(currentPage, totalPages) {\n      return `${this.baseUrl}/${currentPage + 1}`;\n    },\n    previousPage(currentPage, totalPages) {\n      return currentPage === 2\n        ? `${this.baseUrl}/`\n        : `${this.baseUrl}/${currentPage - 1}`;\n    }\n  },\n  computed: {\n    startPage() {\n      if (this.currentPage === 1) {\n        return 1;\n      }\n      if (this.currentPage === this.totalPages) {\n        return this.currentPage - 1;\n      }\n      return this.currentPage - 1;\n    },\n    pages() {\n      const range = [];\n      for (\n        let i = this.startPage;\n        i <=\n        Math.min(this.startPage + this.maxVisibleButtons - 1, this.totalPages);\n        i += 1\n      ) {\n        range.push({\n          name: i,\n          isDisabled: i === this.currentPage,\n          link: i === 1 ? `${this.baseUrl}/` : `${this.baseUrl}/${i}`\n        });\n      }\n      return range;\n    }\n  }\n};\n",{"version":3,"sources":["Pagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Pagination.vue","sourceRoot":"src/components/Content","sourcesContent":["<template>\n  <ul class=\"flex pl-0 list-none rounded my-2\">\n\n    <li v-if=\"!isFirstPage(currentPage, totalPages)\">\n      <g-link :to=\"previousPage(currentPage,totalPages)\" class=\"w-10 relative block py-2 text-center dark:text-gray-400 dark:border-gray-800 dark:hover:bg-gray-700 dark:bg-gray-800 leading-tight bg-white border border-gray-300 text-black ml-1 rounded-full hover:bg-gray-300 focus:outline-none\" tabindex=\"-1\" >\n        <font-awesome :icon=\"['fas', 'arrow-left']\"></font-awesome>\n      </g-link>\n    </li>\n\n    <li class=\"self-center mx-4 dark:text-gray-400 \">\n        Page {{ currentPage }} of {{ totalPages }} \n    </li>\n\n    <li v-if=\"!isLastPage(currentPage, totalPages)\">\n      <g-link :to=\"nextPage(currentPage,totalPages)\" class=\"w-10 relative block py-2 text-center dark:text-gray-400 dark:border-gray-800 dark:hover:bg-gray-700 dark:bg-gray-800 leading-tight bg-white border border-gray-300 text-black ml-1 rounded-full hover:bg-gray-300 focus:outline-none\" tabindex=\"-1\" >\n        <font-awesome :icon=\"['fas', 'arrow-right']\"></font-awesome>\n      </g-link>\n    </li>\n  </ul>\n\n</template>\n\n<script>\nexport default {\n  props: {\n    baseUrl: String,\n    currentPage: Number,\n    totalPages: Number,\n    maxVisibleButtons: {\n      type: Number,\n      required: false,\n      default: 3\n    }\n  },\n  methods: {\n    isFirstPage(currentPage, totalPages) {\n        return currentPage == 1;\n    },\n    isLastPage(currentPage, totalPages) {\n        return currentPage == totalPages;\n    },\n    isCurrentPage(currentPage, pageElement) {\n        return currentPage == pageElement;\n    },\n    nextPage(currentPage, totalPages) {\n      return `${this.baseUrl}/${currentPage + 1}`;\n    },\n    previousPage(currentPage, totalPages) {\n      return currentPage === 2\n        ? `${this.baseUrl}/`\n        : `${this.baseUrl}/${currentPage - 1}`;\n    }\n  },\n  computed: {\n    startPage() {\n      if (this.currentPage === 1) {\n        return 1;\n      }\n      if (this.currentPage === this.totalPages) {\n        return this.currentPage - 1;\n      }\n      return this.currentPage - 1;\n    },\n    pages() {\n      const range = [];\n      for (\n        let i = this.startPage;\n        i <=\n        Math.min(this.startPage + this.maxVisibleButtons - 1, this.totalPages);\n        i += 1\n      ) {\n        range.push({\n          name: i,\n          isDisabled: i === this.currentPage,\n          link: i === 1 ? `${this.baseUrl}/` : `${this.baseUrl}/${i}`\n        });\n      }\n      return range;\n    }\n  }\n};\n</script>"]}]}